/*
 * Copyright (c) 2013-2015, Roland Bock, Alexey Elymanov
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *
 *  * Redistributions of source code must retain the above copyright notice,
 *    this list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *    this list of conditions and the following disclaimer in the documentation
 *    and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
 * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
 * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE
 * OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED
 * OF THE POSSIBILITY OF SUCH DAMAGE.
 */


#include <sqlpp11/sqlpp11.h>
//#include "MockDb.h" //todo 1
#include <cassert>
#include <iostream>
#include <string>
#include <fstream>
#include "ddl2cpp_test.h"
namespace {
    int testSqlFile(const std::string pathToSqlFile) {

#if defined _WIN64 || defined _WIN32
        std::string nullOutput = " > nul 2>&1";
#else
        std::string nullOutput = " > /dev/null 2>&1";
#endif

        nullOutput = "";

        std::string ddlHeaderPath = "../test_scripts/ddl2cpp_test_result_header";

        std::string args =
                " ../scripts/ddl2cpp  -fail-on-parse " +
                pathToSqlFile + " " +
                ddlHeaderPath +
                "  ddlcpp2_test_namespace " +
                nullOutput;
        //test_scripts_python_path is a global variable from ddl2cpp_test.h, which is generated by cmake
        auto python_args = test_scripts_python_path + args.c_str();
        return system(python_args.c_str());
    }
}